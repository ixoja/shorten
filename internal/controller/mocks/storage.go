// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import model "github.com/ixoja/shorten/internal/model"
import time "time"

// Storage is an autogenerated mock type for the Storage type
type Storage struct {
	mock.Mock
}

// Delete provides a mock function with given fields: id
func (_m *Storage) Delete(id string) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// EvictOlder provides a mock function with given fields: timestamp
func (_m *Storage) EvictOlder(timestamp time.Time) error {
	ret := _m.Called(timestamp)

	var r0 error
	if rf, ok := ret.Get(0).(func(time.Time) error); ok {
		r0 = rf(timestamp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: id
func (_m *Storage) Get(id string) (*model.StoredURL, bool, error) {
	ret := _m.Called(id)

	var r0 *model.StoredURL
	if rf, ok := ret.Get(0).(func(string) *model.StoredURL); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.StoredURL)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(id)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetByURL provides a mock function with given fields: longURL
func (_m *Storage) GetByURL(longURL string) (*model.StoredURL, bool, error) {
	ret := _m.Called(longURL)

	var r0 *model.StoredURL
	if rf, ok := ret.Get(0).(func(string) *model.StoredURL); ok {
		r0 = rf(longURL)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.StoredURL)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(longURL)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(longURL)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// Save provides a mock function with given fields: stored
func (_m *Storage) Save(stored *model.StoredURL) (*model.StoredURL, error) {
	ret := _m.Called(stored)

	var r0 *model.StoredURL
	if rf, ok := ret.Get(0).(func(*model.StoredURL) *model.StoredURL); ok {
		r0 = rf(stored)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.StoredURL)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*model.StoredURL) error); ok {
		r1 = rf(stored)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
