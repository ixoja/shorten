// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"github.com/ixoja/shorten/internal/service"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetHashHandlerFunc turns a function with the right signature into a get hash handler
type GetHashHandlerFunc func(service.GetHashParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetHashHandlerFunc) Handle(params service.GetHashParams) middleware.Responder {
	return fn(params)
}

// GetHashHandler interface for that can handle valid get hash params
type GetHashHandler interface {
	Handle(service.GetHashParams) middleware.Responder
}

// NewGetHash creates a new http.Handler for the get hash operation
func NewGetHash(ctx *middleware.Context, handler GetHashHandler) *GetHash {
	return &GetHash{Context: ctx, Handler: handler}
}

/*GetHash swagger:route GET /{hash} getHash

Redirect from short URL to long URL.

*/
type GetHash struct {
	Context *middleware.Context
	Handler GetHashHandler
}

func (o *GetHash) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = service.NewGetHashParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
